<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Basic.Windows">
	<Duration x:Key="animTime">0:0:0.20</Duration>
	<Style TargetType="{x:Type local:ExplorerHeader}">
		<Setter Property="CollapseGeometry" Value="M0.5,0.5 L4.0,4.0 7.5,0.5 M0.5,4.5 L4.0,8.0 7.5,4.5" />
		<Setter Property="CornerRadius" Value="8,8,0,0" />
		<Setter Property="BorderBrush" Value="#80FFFFFF" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Background" Value="#60808080" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:ExplorerHeader}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="20" />
							</Grid.ColumnDefinitions>
							<StackPanel Margin="6,0,6,0" Orientation="Horizontal" VerticalAlignment="Center">
								<Image RenderOptions.BitmapScalingMode="NearestNeighbor"
                                        RenderOptions.EdgeMode="Aliased" Source="{TemplateBinding Image}"
                                        VerticalAlignment="Center" Stretch="Fill" MaxWidth="16" MaxHeight="16" />
								<ContentPresenter Grid.Column="0" Content="{TemplateBinding Content}" x:Name="content"
                                        VerticalAlignment="Center" TextElement.FontWeight="Bold"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" Margin="4,0,0,0" />
							</StackPanel>
							<Grid Grid.Column="1" Margin="0,0,4,0" x:Name="circleButton" VerticalAlignment="Center">
								<Ellipse Name="circle" Width="16.5" Height="16.5" Stroke="#30000000"
                                        StrokeThickness="1.5" SnapsToDevicePixels="False" Visibility="Visible"
                                        Fill="#e0FFFFFF">
								</Ellipse>
								<Path x:Name="path" SnapsToDevicePixels="False" StrokeThickness="1.1"
                                        Data="{TemplateBinding CollapseGeometry}" Stroke="{TemplateBinding Foreground}"
                                        VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ShowEllipse" Value="False">
							<Setter Property="Visibility" Value="Collapsed" TargetName="circle" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="HasExpandGeometry" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="path" Property="Data"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ExpandGeometry}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="HasExpandGeometry" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="path" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type local:ExplorerBar}">
		<Setter Property="Background" Value="{x:Static SystemColors.ControlBrush}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="{x:Static SystemColors.WindowBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}">
						<ScrollViewer VerticalScrollBarVisibility="Auto">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type local:ExplorerGroup}">
							<Setter Property="HeaderBackground" Value="{x:Static SystemColors.ControlBrush}" />
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="MouseOverHeaderBackground" Value="{x:Static SystemColors.ControlBrush}" />
							<Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlBrush}" />
							<Setter Property="MouseOverHeaderForeground"
                                    Value="{x:Static SystemColors.ControlTextBrush}" />
							<Setter Property="ShowEllipse" Value="False" />
						</Style>
					</ControlTemplate.Resources>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type local:ExplorerGroup}">
		<Setter Property="Background" Value="#40808080" />
		<Setter Property="BorderBrush" Value="#60404040" />
		<Setter Property="HeaderBackground" Value="#40A0A0A0" />
		<Setter Property="MouseOverHeaderBackground" Value="#60FFFFFF" />
		<Setter Property="MouseOverHeaderForeground" Value="#F0000000" />
		<Setter Property="HeaderBorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="ShowEllipse" Value="True" />
		<Setter Property="BorderThickness" Value="1,0,1,1" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:ExplorerGroup}">
					<Border BorderThickness="{TemplateBinding HeaderBorderThickness}"
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<local:ExplorerHeader x:Name="header" Grid.Row="0" Content="{TemplateBinding Header}" 
                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}" Cursor="Hand"
                                    Background="{TemplateBinding HeaderBackground}"
                                    ShowEllipse="{TemplateBinding ShowEllipse}"
                                    CornerRadius="{TemplateBinding CornerRadius}" Image="{TemplateBinding Image}" />
							<Border x:Name="panel" Grid.Row="1" Panel.ZIndex="-1" Margin="0,-1,0,0"
                                    Opacity="{Binding ElementName=decorator, Path=AnimationOpacity}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
								<local:AnimationDecorator x:Name="decorator" VerticalAlignment="Top"
                                        Duration="{StaticResource animTime}" MinHeight="{TemplateBinding MinHeight}"
                                        MaxHeight="{TemplateBinding MaxHeight}" Height="{TemplateBinding Height}"
                                        IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded}">
									<Border Padding="{TemplateBinding Padding}">
										<ItemsPresenter/>
									</Border>
								</local:AnimationDecorator>
							</Border>
						</Grid>
						<Border.LayoutTransform>
							<ScaleTransform x:Name="scaleT" ScaleY="1" />
						</Border.LayoutTransform>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsHeaderVisible" Value="False">
							<Setter TargetName="header" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True" SourceName="header">
							<Setter Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=MouseOverHeaderForeground}"
                                    TargetName="header" />
							<Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=MouseOverHeaderBackground}"
                                    TargetName="header" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsPressed" Value="True" SourceName="header" />
								<Condition Property="HasPressedBackground" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PressedHeaderBackground}"
                                    TargetName="header" />
						</MultiTrigger>
						<EventTrigger RoutedEvent="local:ExplorerGroup.MaximizedEvent">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard Storyboard.TargetProperty="ScaleY">
										<DoubleAnimation To="1" Duration="{StaticResource animTime}"
                                                Storyboard.TargetName="scaleT" DecelerationRatio="0.8" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="local:ExplorerGroup.MinimizedEvent">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard Storyboard.TargetProperty="ScaleY">
										<DoubleAnimation To="0" Duration="{StaticResource animTime}"
                                                Storyboard.TargetName="scaleT" DecelerationRatio="0.8" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type TreeViewItem}">
							<Setter Property="Template"
                                    Value="{DynamicResource {ComponentResourceKey local:Skins, TreeViewItemTemplate}}" />
						</Style>
						<Style TargetType="{x:Type ListViewItem}">
							<Setter Property="Template"
                                    Value="{DynamicResource {ComponentResourceKey local:Skins, ListViewItemTemplate}}" />
						</Style>
					</ControlTemplate.Resources>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
